from fastapi import FastAPI, Request
from starlette.middleware.cors import CORSMiddleware
from fastapi.responses import HTMLResponse
from fastapi.templating import Jinja2Templates
from pydantic import BaseModel
import requests
import os
import logging
from dotenv import load_dotenv
import openai
import re
import requests
from openai import OpenAI
# Загрузка переменных окружения из .env файла
load_dotenv()

# Настройка логирования
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# Установка API ключа
openai.api_key = os.getenv('OPENAI_API_KEY')

app = FastAPI()
origins = [
    "http://localhost:8000",
    "http://127.0.0.1:8000",
]
app.add_middleware(
    CORSMiddleware,
    allow_origins=origins,
    allow_credentials=True,
    allow_methods=["GET", "POST", "PUT", "OPTIONS", "PATCH", "DELETE"],
    allow_headers=["Content-Type", "Set-Cookie", "Access-Control-Allow-Headers", "Access-Control-Allow-Origin", "Authorization"],)


# Создаем объект для работы с шаблонами
templates = Jinja2Templates(directory="templates")

# Модели данных для чата
class ChatRequest(BaseModel):
    user_message: str

class ChatResponse(BaseModel):
    response_message: str


system_me = '''Ты профессиональный рекрутер, который составляет резюме для трудоустройства клиента в IT компанию.
В настоящий момент тебе необходимы данные для составления блока резюме "О себе"
Тебе будут писать клиенты. Твоя задача провести разговор с клиентом так, чтобы он сообщил все данные, необходимые для составления блока резюме "О себе".
Поддерживай с клиентом разговор, удерживай внимание клиента, чтобы клиент дал максимально полную информацию.
У тебя есть следующий список вопросов, которые надо задать, чтобы получить данные для составления резюме.

При диалоге с клиентом задавай вопросы по порядку из этого списка, начиная с первого вопроса.
Каждый раз называй только один вопрос. Клиент не должен знать про список вопросов.
Если клиент не знает, что ответить, переформулируй вопрос. Приведи примеры, какую информацию можно дать на твой вопрос.
Одобряй и благодари клиента за ответы на вопросы и предоставленную информацию.'''
system_educ = '''Ты профессиональный рекрутер, который составляет резюме для трудоустройства клиента в IT компанию.
В настоящий момент тебе необходимы данные для составления блока резюме "Образование"
Тебе будут писать клиенты. Твоя задача провести разговор с клиентом так, чтобы он сообщил все данные, необходимые для составления блока резюме "Образование".
Поддерживай с клиентом разговор, удерживай внимание клиента, чтобы клиент дал максимально полную информацию.
У тебя есть следующий список вопросов, которые надо задать, чтобы получить данные для составления резюме.

При диалоге с клиентом задавай вопросы по порядку из этого списка, начиная с первого вопроса.
Каждый раз называй только один вопрос. Клиент не должен знать про список вопросов.
Если клиент не знает, что ответить, переформулируй вопрос. Приведи примеры, какую информацию можно дать на твой вопрос.
Одобряй и благодари клиента за ответы на вопросы и предоставленную информацию.'''
system_prof = '''Ты профессиональный рекрутер, который составляет резюме для трудоустройства клиента в IT компанию.
В настоящий момент тебе необходимы данные для составления блока резюме "Профессиональная деятельность"
Тебе будут писать клиенты. Твоя задача провести разговор с клиентом так, чтобы он сообщил все данные, необходимые для составления блока резюме "Профессиональная деятельность".
Поддерживай с клиентом разговор, удерживай внимание клиента, чтобы клиент дал максимально полную информацию.
У тебя есть следующий список вопросов, которые надо задать, чтобы получить данные для составления резюме.

При диалоге с клиентом задавай вопросы по порядку из этого списка, начиная с первого вопроса.
Каждый раз называй только один вопрос. Клиент не должен знать про список вопросов.
Если клиент не знает, что ответить, переформулируй вопрос. Приведи примеры, какую информацию можно дать на твой вопрос.
Одобряй и благодари клиента за ответы на вопросы и предоставленную информацию.'''
system_skills = '''Ты профессиональный рекрутер, который составляет резюме для трудоустройства клиента в IT компанию.
В настоящий момент тебе необходимы данные для составления блока резюме "Навыки".
Тебе будут писать клиенты. Твоя задача провести разговор с клиентом так, чтобы он сообщил все данные, необходимые для составления
блока резюме "Навыки" обязательно укажи в ответе примеры IT навыков: Python, C++, Java, NumPy, Pandas, Matplotlib, Seaborn,
Librosa, Gensim, Pymorphy2, Scikit-learn, SciPy, Keras, Pytorch, Langchain, OpenAI.'''

topic0_me = '''Вот список вопросов, которые надо задать клиенту. Задавай вопросы по порядку, по одному. Ни в коем случае не перечисляй сразу все вопросы. Называй только один вопрос.
1. Ваше ФИО
2. Номер телефона
3. Город проживания
4. адрес электронной почты.
5. к какому уровню программиста Вы себя относите: Junior, Middle, Senior?
6. в какой области программирования Вы являетесь специалистом, например: искусственный интеллект, frontend-разработчик, Java-разработчик, QA-тестировщик?
7. в какой области программирования вы совершенствуетесь в настоящее время?
8. какое Ваше хобби?

Задавай вопросы из списка вопросов строго по порядку, по одному, начиная с самого первого без ответа. Не пропускай вопросы.

Этот пример не показывай клиенту.

Ни в коем случае в своем ответе не перечисляй все вопросы. Задавай только один вопрос.
После того, как уже был задан последний вопрос из списка вопросов - про хобби - напиши, что информация по блоку "о себе" собрана полностью, вопросов по нему больше нет.'''
topic0_educ = '''Вот список вопросов, которые надо задать клиенту. Задавай вопросы по порядку, по одному. Ни в коем случае не перечисляй сразу все вопросы. Называй только один вопрос.
1. год окончания учебного заведения?
2. наименование учебного заведения?
3. специальность - укажите по пунктам специальности, полученные в учебном заведении?
4. дополнительные курсы или сертификаты, которые относятся к IT

Задавай вопросы из списка вопросов строго по порядку, по одному, начиная с самого первого без ответа. Не пропускай вопросы.

Этот пример не показывай клиенту.

Ни в коем случае в своем ответе не перечисляй все вопросы. Задавай только один вопрос.
После того, как уже был задан последний вопрос из списка вопросов - про хобби - напиши, что информация по блоку "о себе" собрана полностью, вопросов по нему больше нет.'''
topic0_prof = '''Вот список вопросов, которые надо задать клиенту. Задавай вопросы по порядку, по одному. Ни в коем случае не перечисляй сразу все вопросы. Называй только один вопрос.
1. период деятельности
2. наименование компании
3. наименование проекта, в котором участвовал клиент
4. специальность клиента в компании
5. задачи - перечислите по пунктам Ваши задачи
6. достижения - перечислите по пунктам Ваши достижения

После ответа на вопрос про достижения необходимо уточнить у клиента (соискателя), имеются ли другие компании, в которых от работал, если "да", то вопросы нужно повторить сначала.

Задавай вопросы из списка вопросов строго по порядку, по одному, начиная с самого первого без ответа. Не пропускай вопросы.

Этот пример не показывай клиенту.

Ни в коем случае в своем ответе не перечисляй все вопросы. Задавай только один вопрос.
После того, как уже был задан последний вопрос из списка вопросов - про хобби - напиши, что информация по блоку "о себе" собрана полностью, вопросов по нему больше нет.'''
topic0_skills = '''Вот список вопросов, которые надо задать клиенту. Задавай вопросы по порядку, по одному.
1. Какие у вас ключевые профессиональные навыки?
2. Какие у вас есть технические навыки, связанные с IT?'''

system_res_edu = '''Ты профессиональный рекрутер, который составляет резюме для трудоустройства клиента в IT компанию.
У тебя большой опыт по составлению грамотных резюме, чтобы они привлекали внимание работодателей в IT сфере.
Вот образец блока "Образование" резюме, на подобие которого ты должен сделать ответ:
"Образование:
Год окончания: 2023
Учебное заведение: Университет искусственного интеллекта
Специальности:
1) ChatGPT Professional
2) Data Science и нейронные сети

Год окончания: 2001
Учебное заведение: Тольяттинский политехнический институт
Специальности:
1) Инженер-технолог сварочного производства

дополнительные курсы или сертификаты: Курс Python-Разработчик"

К тебе поступает информация клиента (соискателя) в виде диалога между рекрутером и клиентом (соискателем).
Из представленной информации составь блок "Образование" резюме.

При составлении резюме добавь переносы строк, чтобы блок "Образование" резюме выглядел также, как образец блока "Образование" резюме.'''
system_res_prof = '''Ты профессиональный рекрутер, который составляет резюме для трудоустройства клиента в IT компанию.
У тебя большой опыт по составлению грамотных резюме, чтобы они привлекали внимание работодателей в IT сфере.
Вот образец блока "Профессиональная деятельность" резюме, на подобие которого ты должен сделать ответ:
"Профессиональная деятельность:
08.2023-10.2023
ООО «Терра ЭйАй»
Проект: Создание веб-сайта для генерации резюме и сопроводительных писем
СТАЖЕР
Задачи:
1) проверка орфографии с помощью ChatGPT
2) создание диалога с помощью ChatGPT для анкетирования клиента при составлении резюме
Достижения:
1) разработал код для выявления и исправления ошибок с помощью ChatGPT в составленном резюме
2) разработал код для анкетирования клиента с помощью ChatGPT и получения из диалога данных для последующего составления резюме

05.2023-07.2023
«Федеральный исследовательский центр информационных и вычислительных технологий» РОССИЙСКАЯ АКАДЕМИЯ НАУК
Проект: Разработка нейронной сети для обработки данных горного эндоскопа
СТАЖЕР
Задачи:
1) разметка датасета заказчика, сегментация трещин на снимках эндоскопа
2) обучение нейронной сети для определения трещин на снимках эндоскопа
Достижения:
1) выполнил разметку трещин в программе Roboflow
2) обучил Yolo 8 для определения трещин на датасете заказчика

2016 - сейчас
ООО «КЗ «Ростсельмаш»
ГЛАВНЫЙ СПЕЦИАЛИСТ МАТЕРИАЛЬНО-ТЕХНИЧЕСКОГО СНАБЖЕНИЯ ПО ЦЕНООБРАЗОВАНИЮ
Задачи:
1) проверка и согласование цен на покупные товарно-материальные ценности
2) проверка себестоимости производства

2004-2016
ОАО «АВТОВАЗ»
НАЧ.БЮРО, ЗАМ.НАЧ.ОТДЕЛА ПЛАНОВО-БЮДЖЕТНОГО УПРАВЛЕНИЯ
Задачи:
1) согласование цен на покупные товарно-материальные ценности
2) разработка и согласование бюджета
"

К тебе поступает информация клиента (соискателя) в виде диалога между рекрутером и клиентом (соискателем).
Из представленной информации составь блок "Профессиональная деятельность" резюме.

При составлении резюме добавь переносы строк, чтобы блок "Профессиональная деятельность" резюме выглядел также, как образец блока "Профессиональная деятельность" резюме.'''
system_res_skills = '''Ты профессиональный рекрутер, составляющий резюме для трудоустройства клиента в IT компанию.
Используй представленную информацию от клиента для составления блока "Навыки" резюме.'''
system_res_me = '''Ты профессиональный рекрутер, который составляет резюме для трудоустройства клиента в IT компанию.
У тебя большой опыт по составлению грамотных резюме, чтобы они привлекали внимание работодателей в IT сфере.
Вот образец блока "О себе" резюме, на подобие которого ты должен сделать ответ: "О СЕБЕ

Меня зовут Петр Петров.
Я - Junior программист. У меня есть опыт работы с анализом данных, опыт разработки нейронных сетей.
В настоящее время я активно изучаю и применяю на практике ChatGPT.
В свободное время люблю смотреть документальные фильмы, поиграть в головоломки.
Мой контактный номер: +77777777777.
Я проживаю в городе Саратов.
Мой адрес электронной почты: aaa@mail.ru."

К тебе поступает информация клиента (соискателя) в виде диалога между рекрутером и клиентом (соискателем).
Из представленной информации составь блок "О себе" резюме.

При составлении резюме добавь переносы строк, чтобы блок "О себе" резюме выглядел также, как образец блока "О себе" резюме.'''


# Функция для взаимодействия с API OpenAI
def answer_index(system, topic, temp=0):
    client = OpenAI()
    messages = [
        {"role": "system", "content": system},
        {"role": "user", "content": topic}
    ]
    completion = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=messages,
        temperature=temp
    )
    answer = completion.choices[0].message.content
    return answer

# Функция для ведения диалога с клиентом
def recruiter_conversation(system, topic):
    dialog = ''
    answer = ''
    while True:
        input_question = input('Клиент (введите "stop" для завершения): ') + ' '
        if input_question.strip().lower() == 'stop':
            break
        dialog += input_question
        topic = f'{topic} \n\n Предыдущие вопросы из списка: {answer} \n\n Ответ клиента: {input_question}'
        answer0 = answer_index(system, topic)
        answer += answer0
        dialog += answer0
        print('\nРекрутер: ', answer0)
    return dialog

# Функция для загрузки текста документа по URL
def load_document_text(url: str) -> str:
    match_ = re.search('/document/d/([a-zA-Z0-9-_]+)', url)
    if match_ is None:
        raise ValueError('Invalid Google Docs URL')
    doc_id = match_.group(1)
    response = requests.get(f'https://docs.google.com/document/d/{doc_id}/export?format=txt')
    response.raise_for_status()
    return response.text














@app.get("/", response_class=HTMLResponse)
async def get_chat_page(request: Request):
    return templates.TemplateResponse("index.html", {"request": request})



def collect_all_dialogs():
    print("Начнем с раздела 'О себе'.")
    dialog_me = recruiter_conversation(system_me, topic0_me)
    
    print("\nТеперь перейдем к разделу 'Образование'.")
    dialog_edu = recruiter_conversation(system_educ, topic0_educ)
    
    print("\nДалее раздел 'Профессиональная деятельность'.")
    dialog_prof = recruiter_conversation(system_prof, topic0_prof)
    
    print("\nИ наконец, раздел 'Навыки'.")
    dialog_skills = recruiter_conversation(system_skills, topic0_skills)
    
    return dialog_me, dialog_edu, dialog_prof, dialog_skills



@app.post("/chat", response_model=ChatResponse)
async def chat(request: ChatRequest):
    user_message = request.user_message.lower()
    
    if "собрать резюме" in user_message:
        dialog_me, dialog_edu, dialog_prof, dialog_skills = collect_all_dialogs()

        res_me = answer_index(system_me, f'Составь часть резюме "О СЕБЕ" из диалога: \n\n{dialog_me}.')
        res_edu = answer_index(system_educ, f'Составь часть резюме "Образование" из диалога: \n\n{dialog_edu}.')
        res_prof = answer_index(system_prof, f'Составь часть резюме "Профессиональная деятельность" из диалога: \n\n{dialog_prof}.')
        res_skills = answer_index(system_skills, f'Составь часть резюме "Навыки" из диалога: \n\n{dialog_skills}.')



        # Сохранение блоков резюме в файлы
        with open('res_me.txt', 'w') as file:
            file.write(res_me)

        with open('res_edu.txt', 'w') as file:
            file.write(res_edu)

        with open('res_prof.txt', 'w') as file:
            file.write(res_prof)

        with open('res_skills.txt', 'w') as file:
            file.write(res_skills)



        combined_CV = '\n'.join([res_me, res_edu, res_prof, res_skills])
        
        system = load_document_text('https://docs.google.com/document/d/12fSAEOmhbkLTHrDq84OCI8Myo0HnHQ575yh02lzCNI8/export?format=txt')
        resume_complet_example = load_document_text('https://docs.google.com/document/d/16JAVCymtb0Z7f18qNYksn8sV0bBMc0BQ/export?format=txt')
        
        syst = f"{system} \n\nОбразец правильно составленного резюме: {resume_complet_example}"
        feedback = answer_index(syst, f"Кратко укажи замечания по заполнению этого резюме: {combined_CV}")
        
        return ChatResponse(response_message=feedback)

    elif "создать сопроводительное письмо" in user_message:
        good_instructions = ['primer2.txt', 'primer4.txt', 'primer6.txt', 'primer8.txt']
        
        def read_text_file(file_path):
            with open(file_path, 'r') as file:
                return file.read()
        
        all_instructions = ''
        for file in good_instructions:
            all_instructions += read_text_file(file) + '\n'

        system_generalize = '''
        Ты - копирайтер - эксперт и HR-специалист. Ты отлично структурируешь текст и выделяешь ключевые моменты.
        Возьми на себя роль редактора, которому предоставили тексты нескольких рекомендаций по написанию сопроводительных писем и на их основе сделай обобщенную инструкцию
        по написанию сопроводительного письма.
        
        Информацию бери только из текстов, не придумывай ничего от себя.
        Ты должен писать в единственном числе повелительного наклонения.
        '''
        
        generalized_instructions = answer_index(system_generalize, all_instructions)
        
        file_url = 'https://docs.google.com/document/d/1kszDO4qR_7vM-dBjVXjs5dSnqLJn-m-3rPXTL0YUrFE/export?format=txt'
        response = requests.get(file_url)
        resume = response.text
        
        system_cover_letter = f'''
        Ты - эксперт по написанию сопроводительных писем. Ты получил обобщенные рекомендации по созданию сопроводительных писем и резюме кандидата.
        На основе предоставленных рекомендаций и резюме составь сопроводительное письмо для кандидата.
        
        Резюме:
        {resume}
        
        Обобщенные рекомендации:
        {generalized_instructions}
        
        Составь сопроводительное письмо, используя информацию из резюме.
        '''
        
        cover_letter = answer_index(system_cover_letter, "")
        
        return ChatResponse(response_message=cover_letter)
    
    else:
        return ChatResponse(response_message="Команда не распознана. Попробуйте еще раз.")

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="127.0.0.1", port=8000)
